//package main
package id9

import(
	"fmt"
	"strconv"
)

func sl_product(slice []int) int{

	var product int = 1

//	fmt.Println(slice)

	for p:=0;p<len(slice);p++{
		product*=slice[p]
	}

//	fmt.Println(product)

	return product
}

func sl_max(slice []int) int{
	var max int = slice[0]
	for k:=1;k<len(slice);k++{
		if(slice[k]>max){
			max = slice[k]
		}
	}
	return max
}

//func main(){
func Id9(){

	//const size = 4
	const size = 13
	var slProducts []int
	var slBuffer []int
	var mSets map[int][]int
	var buffer int = 0 
	var number string = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"

	mSets = make(map[int][]int)

	for  j:=1; j<=len(number);j++{
		buffer,_ = strconv.Atoi(number[j-1:j])
		fmt.Printf("%d",buffer)
	}

	fmt.Printf("\n")

	for  l:=1; l<=len(number)-size;l++{
		for j:=l; j<size+l;j++{
			buffer,_ = strconv.Atoi(number[j-1:j])
			slBuffer = append(slBuffer,buffer)
		}
		buffer = sl_product(slBuffer)
		slProducts = append(slProducts,buffer)
		mSets[buffer] = slBuffer
		slBuffer = make([]int,0)
	}

	fmt.Println("List of products of",size,"terms\n",slProducts)
	buffer = sl_max(slProducts)
	fmt.Println("\nThe maximum value found was",buffer,"produced by the set",mSets[buffer])
}
